function [fitresult, gof] = createFits(resistanceNum, squareVoltageNum, weightsNum, resistanceAJ, squareVoltageAJ, weightsAJ)
%CREATEFITS(RESISTANCENUM,SQUAREVOLTAGENUM,WEIGHTSNUM,RESISTANCEAJ,SQUAREVOLTAGEAJ,WEIGHTSAJ)
%  Create fits.
%
%  Data for 'Linear Fit R:1-9' fit:
%      X Input : resistanceNum
%      Y Output: squareVoltageNum
%      Weights : weightsNum
%  Data for 'Linear Fit R:A-J' fit:
%      X Input : resistanceAJ
%      Y Output: squareVoltageAJ
%      Weights : weightsAJ
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 24-Oct-2017 17:21:29

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 2, 1 );
gof = struct( 'sse', cell( 2, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'Linear Fit R:1-9'.
[xData, yData, weights] = prepareCurveData( resistanceNum, squareVoltageNum, weightsNum );

% Set up fittype and options.
ft = fittype( 'poly1' );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Weights = weights;

% Fit model to data.
[fitresult{1}, gof(1)] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'Linear Fit R:1-9' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{1}, xData, yData );
legend( h, 'squareVoltageNum vs. resistanceNum with weightsNum', 'Linear Fit R:1-9', 'Location', 'NorthEast' );
% Label axes
xlabel resistanceNum
ylabel squareVoltageNum
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{1}, xData, yData, 'residuals' );
legend( h, 'Linear Fit R:1-9 - residuals', 'Zero Line', 'Location', 'NorthEast' );
% Label axes
xlabel resistanceNum
ylabel squareVoltageNum
grid on

%% Fit: 'Linear Fit R:A-J'.
[xData, yData, weights] = prepareCurveData( resistanceAJ, squareVoltageAJ, weightsAJ );

% Set up fittype and options.
ft = fittype( 'poly1' );
opts = fitoptions( 'Method', 'LinearLeastSquares' );
opts.Weights = weights;

% Fit model to data.
[fitresult{2}, gof(2)] = fit( xData, yData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'Linear Fit R:A-J' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{2}, xData, yData );
legend( h, 'squareVoltageAJ vs. resistanceAJ with weightsAJ', 'Linear Fit R:A-J', 'Location', 'NorthEast' );
% Label axes
xlabel resistanceAJ
ylabel squareVoltageAJ
grid on

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{2}, xData, yData, 'residuals' );
legend( h, 'Linear Fit R:A-J - residuals', 'Zero Line', 'Location', 'NorthEast' );
% Label axes
xlabel resistanceAJ
ylabel squareVoltageAJ
grid on


